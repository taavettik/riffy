name: ci

on:
  push:
    branches: master

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Set up k8s
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_CONFIG }}
      - uses: azure/k8s-create-secret@v1
        with:
          secret-type: 'generic'
          arguments:  --from-literal=password=${{ secrets.DB_PASSWORD }} --from-literal=username=riffy
          secret-name: riffy-db-credentials

  build-client:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - run: 'echo "PROJECT_ENV=$(. ./kubernetes/ci.sh;)" >> $GITHUB_ENV'
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile.build
          platforms: linux/amd64
          push: true
          tags: 'taavettik/riffy-client:${{ env.PROJECT_ENV }}'

  
  build-server:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - run: 'echo "PROJECT_ENV=$(. ./kubernetes/ci.sh;)" >> $GITHUB_ENV'
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile.build
          platforms: linux/amd64
          push: true
          tags: 'taavettik/riffy-server:${{ env.PROJECT_ENV }}'
    
  deploy-client:
    runs-on: ubuntu-latest
    needs: build-client
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - run: 'echo "PROJECT_ENV=$(. ./kubernetes/ci.sh;)" >> $GITHUB_ENV'
      - uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_CONFIG }}
      - uses: azure/setup-kubectl@v1
      - run: . kubernetes/project.sh; \
          echo $HOST \
          kubectl kustomize "kubernetes/overlays/${PROJECT_ENV}" |envsubst |kubectl apply -f - \
          kubectl rollout restart deployment riffy-client -n "riffy-${{ env.PROJECT_ENV }}"
      - name: Rollout restart
        run: kubectl rollout restart deployment riffy-client

  deploy-server:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up k8s
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_CONFIG }}
      - uses: Azure/k8s-deploy@v1.3
        with:
          manifests: kubernetes/server.yaml
      - uses: azure/setup-kubectl@v1
        id: install
      - name: Rollout restart
        run: kubectl rollout restart deployment riffy-server-deployment

  deploy-ingress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up k8s
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_CONFIG }}
      - uses: Azure/k8s-deploy@v1.3
        with:
          manifests: kubernetes/ingress.yaml

  deploy-redis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up k8s
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_CONFIG }}
      - uses: Azure/k8s-deploy@v1.3
        with:
          manifests: kubernetes/redis.yaml
      - uses: azure/setup-kubectl@v1
        id: install
      - name: Rollout restart
        run: kubectl rollout restart deployment riffy-redis-deployment

  db-deploy:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install sqitch
        run: sudo apt install sqitch
      - name: Deploy
        run: cd database && sqitch deploy --target db:pg://riffy@95.217.8.74/riffy
        env:
          SQITCH_PASSWORD: ${{ secrets.DB_PASSWORD }}