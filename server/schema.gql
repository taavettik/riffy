# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: String!
  name: String!
}

type Artist {
  id: String!
  name: String!
  tabs: [Tab!]!
}

type BaseTab {
  chords: String!
  trackTitle: String!
}

type ExternalTab {
  chords: String!
  trackArtist: String!
  trackTitle: String!
  url: String!
}

type MBArtist {
  id: String!
  name: String!
}

type MBTrack {
  artist: MBArtist
  id: String!
  name: String!
}

type Mutation {
  addRecentExternalTab(url: String!): Boolean!
  addRecentTab(id: String!): Boolean!
  createTab(artist: String!, chords: String!, mbArtistId: String, mbId: String, title: String!): Tab!
  createTabs(tabs: [TabData!]!): [Tab!]!
  deleteTab(id: String!): Artist!
  editTab(chords: String!, id: String!): Tab!
}

type Query {
  convertToEncoding(data: String!, encoding: String!): String!
  currentAccount: Account!
  detectEncoding(data: String!): String!
  getArtist(id: String!): Artist
  getArtists: [Artist!]!
  getConflictingTabs(artist: String!, title: String!): [Tab!]!
  getTab(id: String!): Tab!
  getTabs: [Tab!]!
  getUgTab(url: String!): ExternalTab
  login(name: String!, password: String!): String!
  recentTabs: [RecentTab!]!
  searchArtists(query: String!): [MBArtist!]!
  searchTracks(query: String!): [MBTrack!]!
  searchUgTabs(query: String!): [UgSearchResult!]!
}

union RecentTab = ExternalTab | Tab

type Tab {
  artist: Artist
  chords: String!
  id: String!
  trackTitle: String!
}

input TabData {
  chords: String!
  trackArtist: String!
  trackTitle: String!
}

type UgSearchResult {
  rating: Float!
  trackArtist: String!
  trackTitle: String!
  url: String!
  version: Float!
  votes: Float!
}
